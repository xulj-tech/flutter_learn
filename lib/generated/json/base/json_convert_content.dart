// ignore_for_file: non_constant_identifier_names
// ignore_for_file: camel_case_types
// ignore_for_file: prefer_single_quotes

// This file is automatically generated. DO NOT EDIT, all your changes would be lost.
import 'package:flutter_learn/hy/model/login_entity.dart';
import 'package:flutter_learn/generated/json/login_entity_helper.dart';
import 'package:flutter_learn/hy/model/relation_entity.dart';
import 'package:flutter_learn/generated/json/relation_entity_helper.dart';
import 'package:flutter_learn/hy/model/event_level_number_entity.dart';
import 'package:flutter_learn/generated/json/event_level_number_entity_helper.dart';
import 'package:flutter_learn/hy/model/alarm_entity.dart';
import 'package:flutter_learn/generated/json/alarm_entity_helper.dart';
import 'package:flutter_learn/hy/model/logout_entity.dart';
import 'package:flutter_learn/generated/json/logout_entity_helper.dart';
import 'package:flutter_learn/hy/model/server_set_entity.dart';
import 'package:flutter_learn/generated/json/server_set_entity_helper.dart';
import 'package:flutter_learn/blog/model/home_entity.dart';
import 'package:flutter_learn/generated/json/home_entity_helper.dart';
import 'package:flutter_learn/hy/model/event_level_entity.dart';
import 'package:flutter_learn/generated/json/event_level_entity_helper.dart';
import 'package:flutter_learn/blog/model/banner_entity.dart';
import 'package:flutter_learn/generated/json/banner_entity_helper.dart';

class JsonConvert<T> {
	T fromJson(Map<String, dynamic> json) {
		return _getFromJson<T>(runtimeType, this, json);
	}

  Map<String, dynamic> toJson() {
		return _getToJson<T>(runtimeType, this);
  }

  static _getFromJson<T>(Type type, data, json) {
    switch (type) {			case LoginEntity:
			return loginEntityFromJson(data as LoginEntity, json) as T;			case LoginData:
			return loginDataFromJson(data as LoginData, json) as T;			case LoginDataAC:
			return loginDataACFromJson(data as LoginDataAC, json) as T;			case LoginDataACsV:
			return loginDataACsVFromJson(data as LoginDataACsV, json) as T;			case RelationEntity:
			return relationEntityFromJson(data as RelationEntity, json) as T;			case RelationData:
			return relationDataFromJson(data as RelationData, json) as T;			case RelationDataAC:
			return relationDataACFromJson(data as RelationDataAC, json) as T;			case RelationDataACsV:
			return relationDataACsVFromJson(data as RelationDataACsV, json) as T;			case EventLevelNumberEntity:
			return eventLevelNumberEntityFromJson(data as EventLevelNumberEntity, json) as T;			case EventLevelNumberData:
			return eventLevelNumberDataFromJson(data as EventLevelNumberData, json) as T;			case EventLevelNumberDataAC:
			return eventLevelNumberDataACFromJson(data as EventLevelNumberDataAC, json) as T;			case EventLevelNumberDataACsV:
			return eventLevelNumberDataACsVFromJson(data as EventLevelNumberDataACsV, json) as T;			case AlarmEntity:
			return alarmEntityFromJson(data as AlarmEntity, json) as T;			case AlarmData:
			return alarmDataFromJson(data as AlarmData, json) as T;			case AlarmDataAC:
			return alarmDataACFromJson(data as AlarmDataAC, json) as T;			case AlarmDataACsV:
			return alarmDataACsVFromJson(data as AlarmDataACsV, json) as T;			case AlarmDataACsVAction:
			return alarmDataACsVActionFromJson(data as AlarmDataACsVAction, json) as T;			case AlarmDataACsVOriginalEvent:
			return alarmDataACsVOriginalEventFromJson(data as AlarmDataACsVOriginalEvent, json) as T;			case AlarmDataACsVOriginalEventListEventSource:
			return alarmDataACsVOriginalEventListEventSourceFromJson(data as AlarmDataACsVOriginalEventListEventSource, json) as T;			case AlarmDataACsVOriginalEventListEventSourceIntactInfo:
			return alarmDataACsVOriginalEventListEventSourceIntactInfoFromJson(data as AlarmDataACsVOriginalEventListEventSourceIntactInfo, json) as T;			case AlarmDataACsVOriginalEventAssociatedDevice:
			return alarmDataACsVOriginalEventAssociatedDeviceFromJson(data as AlarmDataACsVOriginalEventAssociatedDevice, json) as T;			case LogoutEntity:
			return logoutEntityFromJson(data as LogoutEntity, json) as T;			case LogoutData:
			return logoutDataFromJson(data as LogoutData, json) as T;			case LogoutDataAC:
			return logoutDataACFromJson(data as LogoutDataAC, json) as T;			case LogoutDataACsV:
			return logoutDataACsVFromJson(data as LogoutDataACsV, json) as T;			case ServerSetEntity:
			return serverSetEntityFromJson(data as ServerSetEntity, json) as T;			case ServerSetData:
			return serverSetDataFromJson(data as ServerSetData, json) as T;			case ServerSetDataAC:
			return serverSetDataACFromJson(data as ServerSetDataAC, json) as T;			case ServerSetDataACsV:
			return serverSetDataACsVFromJson(data as ServerSetDataACsV, json) as T;			case HomeEntity:
			return homeEntityFromJson(data as HomeEntity, json) as T;			case HomeData:
			return homeDataFromJson(data as HomeData, json) as T;			case HomeDataData:
			return homeDataDataFromJson(data as HomeDataData, json) as T;			case EventLevelEntity:
			return eventLevelEntityFromJson(data as EventLevelEntity, json) as T;			case EventLevelData:
			return eventLevelDataFromJson(data as EventLevelData, json) as T;			case BannerEntity:
			return bannerEntityFromJson(data as BannerEntity, json) as T;			case BannerData:
			return bannerDataFromJson(data as BannerData, json) as T;    }
    return data as T;
  }

  static _getToJson<T>(Type type, data) {
		switch (type) {			case LoginEntity:
			return loginEntityToJson(data as LoginEntity);			case LoginData:
			return loginDataToJson(data as LoginData);			case LoginDataAC:
			return loginDataACToJson(data as LoginDataAC);			case LoginDataACsV:
			return loginDataACsVToJson(data as LoginDataACsV);			case RelationEntity:
			return relationEntityToJson(data as RelationEntity);			case RelationData:
			return relationDataToJson(data as RelationData);			case RelationDataAC:
			return relationDataACToJson(data as RelationDataAC);			case RelationDataACsV:
			return relationDataACsVToJson(data as RelationDataACsV);			case EventLevelNumberEntity:
			return eventLevelNumberEntityToJson(data as EventLevelNumberEntity);			case EventLevelNumberData:
			return eventLevelNumberDataToJson(data as EventLevelNumberData);			case EventLevelNumberDataAC:
			return eventLevelNumberDataACToJson(data as EventLevelNumberDataAC);			case EventLevelNumberDataACsV:
			return eventLevelNumberDataACsVToJson(data as EventLevelNumberDataACsV);			case AlarmEntity:
			return alarmEntityToJson(data as AlarmEntity);			case AlarmData:
			return alarmDataToJson(data as AlarmData);			case AlarmDataAC:
			return alarmDataACToJson(data as AlarmDataAC);			case AlarmDataACsV:
			return alarmDataACsVToJson(data as AlarmDataACsV);			case AlarmDataACsVAction:
			return alarmDataACsVActionToJson(data as AlarmDataACsVAction);			case AlarmDataACsVOriginalEvent:
			return alarmDataACsVOriginalEventToJson(data as AlarmDataACsVOriginalEvent);			case AlarmDataACsVOriginalEventListEventSource:
			return alarmDataACsVOriginalEventListEventSourceToJson(data as AlarmDataACsVOriginalEventListEventSource);			case AlarmDataACsVOriginalEventListEventSourceIntactInfo:
			return alarmDataACsVOriginalEventListEventSourceIntactInfoToJson(data as AlarmDataACsVOriginalEventListEventSourceIntactInfo);			case AlarmDataACsVOriginalEventAssociatedDevice:
			return alarmDataACsVOriginalEventAssociatedDeviceToJson(data as AlarmDataACsVOriginalEventAssociatedDevice);			case LogoutEntity:
			return logoutEntityToJson(data as LogoutEntity);			case LogoutData:
			return logoutDataToJson(data as LogoutData);			case LogoutDataAC:
			return logoutDataACToJson(data as LogoutDataAC);			case LogoutDataACsV:
			return logoutDataACsVToJson(data as LogoutDataACsV);			case ServerSetEntity:
			return serverSetEntityToJson(data as ServerSetEntity);			case ServerSetData:
			return serverSetDataToJson(data as ServerSetData);			case ServerSetDataAC:
			return serverSetDataACToJson(data as ServerSetDataAC);			case ServerSetDataACsV:
			return serverSetDataACsVToJson(data as ServerSetDataACsV);			case HomeEntity:
			return homeEntityToJson(data as HomeEntity);			case HomeData:
			return homeDataToJson(data as HomeData);			case HomeDataData:
			return homeDataDataToJson(data as HomeDataData);			case EventLevelEntity:
			return eventLevelEntityToJson(data as EventLevelEntity);			case EventLevelData:
			return eventLevelDataToJson(data as EventLevelData);			case BannerEntity:
			return bannerEntityToJson(data as BannerEntity);			case BannerData:
			return bannerDataToJson(data as BannerData);    }
    return data as T;
  }
  //Go back to a single instance by type
  static _fromJsonSingle(String type, json) {
    switch (type) {			case 'LoginEntity':
			return LoginEntity().fromJson(json);			case 'LoginData':
			return LoginData().fromJson(json);			case 'LoginDataAC':
			return LoginDataAC().fromJson(json);			case 'LoginDataACsV':
			return LoginDataACsV().fromJson(json);			case 'RelationEntity':
			return RelationEntity().fromJson(json);			case 'RelationData':
			return RelationData().fromJson(json);			case 'RelationDataAC':
			return RelationDataAC().fromJson(json);			case 'RelationDataACsV':
			return RelationDataACsV().fromJson(json);			case 'EventLevelNumberEntity':
			return EventLevelNumberEntity().fromJson(json);			case 'EventLevelNumberData':
			return EventLevelNumberData().fromJson(json);			case 'EventLevelNumberDataAC':
			return EventLevelNumberDataAC().fromJson(json);			case 'EventLevelNumberDataACsV':
			return EventLevelNumberDataACsV().fromJson(json);			case 'AlarmEntity':
			return AlarmEntity().fromJson(json);			case 'AlarmData':
			return AlarmData().fromJson(json);			case 'AlarmDataAC':
			return AlarmDataAC().fromJson(json);			case 'AlarmDataACsV':
			return AlarmDataACsV().fromJson(json);			case 'AlarmDataACsVAction':
			return AlarmDataACsVAction().fromJson(json);			case 'AlarmDataACsVOriginalEvent':
			return AlarmDataACsVOriginalEvent().fromJson(json);			case 'AlarmDataACsVOriginalEventListEventSource':
			return AlarmDataACsVOriginalEventListEventSource().fromJson(json);			case 'AlarmDataACsVOriginalEventListEventSourceIntactInfo':
			return AlarmDataACsVOriginalEventListEventSourceIntactInfo().fromJson(json);			case 'AlarmDataACsVOriginalEventAssociatedDevice':
			return AlarmDataACsVOriginalEventAssociatedDevice().fromJson(json);			case 'LogoutEntity':
			return LogoutEntity().fromJson(json);			case 'LogoutData':
			return LogoutData().fromJson(json);			case 'LogoutDataAC':
			return LogoutDataAC().fromJson(json);			case 'LogoutDataACsV':
			return LogoutDataACsV().fromJson(json);			case 'ServerSetEntity':
			return ServerSetEntity().fromJson(json);			case 'ServerSetData':
			return ServerSetData().fromJson(json);			case 'ServerSetDataAC':
			return ServerSetDataAC().fromJson(json);			case 'ServerSetDataACsV':
			return ServerSetDataACsV().fromJson(json);			case 'HomeEntity':
			return HomeEntity().fromJson(json);			case 'HomeData':
			return HomeData().fromJson(json);			case 'HomeDataData':
			return HomeDataData().fromJson(json);			case 'EventLevelEntity':
			return EventLevelEntity().fromJson(json);			case 'EventLevelData':
			return EventLevelData().fromJson(json);			case 'BannerEntity':
			return BannerEntity().fromJson(json);			case 'BannerData':
			return BannerData().fromJson(json);    }
    return null;
  }

  //empty list is returned by type
  static _getListFromType(String type) {
    switch (type) {			case 'LoginEntity':
			return List<LoginEntity>();			case 'LoginData':
			return List<LoginData>();			case 'LoginDataAC':
			return List<LoginDataAC>();			case 'LoginDataACsV':
			return List<LoginDataACsV>();			case 'RelationEntity':
			return List<RelationEntity>();			case 'RelationData':
			return List<RelationData>();			case 'RelationDataAC':
			return List<RelationDataAC>();			case 'RelationDataACsV':
			return List<RelationDataACsV>();			case 'EventLevelNumberEntity':
			return List<EventLevelNumberEntity>();			case 'EventLevelNumberData':
			return List<EventLevelNumberData>();			case 'EventLevelNumberDataAC':
			return List<EventLevelNumberDataAC>();			case 'EventLevelNumberDataACsV':
			return List<EventLevelNumberDataACsV>();			case 'AlarmEntity':
			return List<AlarmEntity>();			case 'AlarmData':
			return List<AlarmData>();			case 'AlarmDataAC':
			return List<AlarmDataAC>();			case 'AlarmDataACsV':
			return List<AlarmDataACsV>();			case 'AlarmDataACsVAction':
			return List<AlarmDataACsVAction>();			case 'AlarmDataACsVOriginalEvent':
			return List<AlarmDataACsVOriginalEvent>();			case 'AlarmDataACsVOriginalEventListEventSource':
			return List<AlarmDataACsVOriginalEventListEventSource>();			case 'AlarmDataACsVOriginalEventListEventSourceIntactInfo':
			return List<AlarmDataACsVOriginalEventListEventSourceIntactInfo>();			case 'AlarmDataACsVOriginalEventAssociatedDevice':
			return List<AlarmDataACsVOriginalEventAssociatedDevice>();			case 'LogoutEntity':
			return List<LogoutEntity>();			case 'LogoutData':
			return List<LogoutData>();			case 'LogoutDataAC':
			return List<LogoutDataAC>();			case 'LogoutDataACsV':
			return List<LogoutDataACsV>();			case 'ServerSetEntity':
			return List<ServerSetEntity>();			case 'ServerSetData':
			return List<ServerSetData>();			case 'ServerSetDataAC':
			return List<ServerSetDataAC>();			case 'ServerSetDataACsV':
			return List<ServerSetDataACsV>();			case 'HomeEntity':
			return List<HomeEntity>();			case 'HomeData':
			return List<HomeData>();			case 'HomeDataData':
			return List<HomeDataData>();			case 'EventLevelEntity':
			return List<EventLevelEntity>();			case 'EventLevelData':
			return List<EventLevelData>();			case 'BannerEntity':
			return List<BannerEntity>();			case 'BannerData':
			return List<BannerData>();    }
    return null;
  }

  static M fromJsonAsT<M>(json) {
    String type = M.toString();
    if (json is List && type.contains("List<")) {
      String itemType = type.substring(5, type.length - 1);
      List tempList = _getListFromType(itemType);
      json.forEach((itemJson) {
        tempList
            .add(_fromJsonSingle(type.substring(5, type.length - 1), itemJson));
      });
      return tempList as M;
    } else {
      return _fromJsonSingle(M.toString(), json) as M;
    }
  }
}